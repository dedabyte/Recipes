{"version":3,"sources":["components/SlideIn/SlideIn.module.scss","components/RecipeView/Paragraph/Paragraph.module.scss","components/TagList/TagList.module.scss","components/Image/Image.module.scss","components/App/App.module.scss","components/RecipeView/YouTube/YouTube.module.scss","data/ls.ts","data/index.ts","data/axios.ts","types/index.ts","reducers/data/index.ts","components/SlideIn/service.ts","reducers/slideIn/index.ts","utils/imgur.ts","components/Image/Image.tsx","components/TagList/TagList.tsx","components/RecipeView/Ingredients/Ingredients.tsx","components/RecipeView/Paragraph/Paragraph.tsx","components/RecipeView/YouTube/YouTube.tsx","components/RecipeView/RecipeView.tsx","components/ListItem/ListItem.tsx","utils/cordova.ts","components/SlideIn/SlideIn.model.ts","components/SlideIn/SlideIn.tsx","components/App/App.tsx","reducers/index.ts","serviceWorker.ts","index.tsx","components/RecipeView/Ingredients/Ingredients.module.scss","components/RecipeView/RecipeView.module.scss","components/ListItem/ListItem.module.scss"],"names":["module","exports","LsKeys","prepareData","data","forEach","recipe","content","i","key","id","type","replace","makeUrl","path","RecipeContentType","makeKey","ls","value","localStorage","setItem","JSON","stringify","initialState","isLoading","isError","rawValue","getItem","parse","DATA","dataSlice","createSlice","name","reducers","dataRequest","state","dataSuccess","action","payload","dataError","actions","dataReducer","reducer","slideInComponent","slideInSlice","isActive","activate","prepare","component","setComponent","deactivate","slideInReducer","getThumbnail","imageUrl","Image","url","klass","className","cls","c","wrap","style","backgroundImage","TagList","tags","keyPrefix","length","map","tag","Ingredients","recipeContent","title","parsedContent","split","row","trim","push","quantity","shift","join","parseContent","table","Paragraph","p","getEmbedUrl","getCoverUrl","selectIsActive","s","slideIn","YouTube","useSelector","useState","play","setPlay","useEffect","match","getYTId","playVideo","videoContainer","src","frameBorder","allow","allowFullScreen","cover","onClick","coverImage","coverOverlay","playIcon","RecipeView","image","contentWrap","INGREDIENTS","YOUTUBE","PARAGRAPH","renderRecipeContent","ListItem","dispatch","useDispatch","onDeviceReady","document","addEventListener","onBackKey","e","backKeyHandler","noop","preventDefault","navigator","app","exitApp","SlideIn","useCallback","useSlideInModel","wrapRef","useRef","handleBack","current","scrollTo","classNameComponent","active","classNameBack","back","ref","selectData","App","axios","get","fbget","then","console","log","catch","error","r","rootReducer","combineReducers","Boolean","window","location","hostname","store","configureStore","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1a82d965.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"SlideIn_wrap__1PUfU\",\"active\":\"SlideIn_active__3yx6B\",\"back\":\"SlideIn_back__1Rcr4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Paragraph_wrap__N3xmS\",\"title\":\"Paragraph_title__1vwUR\",\"p\":\"Paragraph_p__r8mOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"TagList_tag__18A-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Image_wrap__Su3u-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3maBR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"YouTube_wrap__12Ux0\",\"videoContainer\":\"YouTube_videoContainer__5VVIo\",\"cover\":\"YouTube_cover__eRZ2M\",\"coverOverlay\":\"YouTube_coverOverlay__1TiHr\",\"coverImage\":\"YouTube_coverImage__15yvU\",\"playIcon\":\"YouTube_playIcon__1WyrH\"};","export enum LsKeys {\r\n\tDATA = 'data',\r\n}\r\n\r\nconst prefix = 'recipes_';\r\n\r\nconst makeKey = (key: LsKeys) => `${prefix}${key}`;\r\n\r\nconst get = (key: LsKeys) => {\r\n\tconst rawValue = localStorage.getItem(makeKey(key));\r\n\treturn rawValue ? JSON.parse(rawValue) : null;\r\n};\r\n\r\nconst set = (key: LsKeys, value: any) => {\r\n\treturn localStorage.setItem(makeKey(key), JSON.stringify(value));\r\n};\r\n\r\nconst rem = (key: LsKeys) => {\r\n\treturn localStorage.removeItem(makeKey(key));\r\n};\r\n\r\nexport const ls = {\r\n\tget,\r\n\tset,\r\n\trem,\r\n};\r\n","import { Recipe } from '../types';\r\n\r\nexport const prepareData = (data: Recipe[]) => {\r\n\tdata.forEach(recipe => {\r\n\t\trecipe.content.forEach((content, i) => {\r\n\t\t\tcontent.key = `recipe-${recipe.id}-${content.type}-${i}`;\r\n\t\t\tcontent.content = content.content?.replace(/\\t/gi, '');\r\n\t\t});\r\n\t});\r\n\treturn data;\r\n};\r\n","import axios from 'axios';\r\n\r\nconst makeUrl = (path: string) => `https://recipes-ccae2.firebaseio.com/${path}.json?auth=KdZC0TV3sNDv7pkNLfyYyT6um8bjFm84GUYqcxPl`;\r\n\r\nexport const fbget = (path: string = '') => axios.get(makeUrl(path));\r\n","export interface Store {\r\n\tsearch: SearchState,\r\n\tslideIn: SlideInState;\r\n\tdata: DataState,\r\n}\r\n\r\nexport interface SearchState {\r\n\tisActive: boolean;\r\n\ttext?: string;\r\n\ttags?: string[];\r\n\ttime?: number;\r\n\tresults: Recipe[]; // mozda ne ceo rezultat, samo id\r\n}\r\n\r\nexport interface SlideInState {\r\n\tisActive: boolean;\r\n}\r\n\r\nexport interface DataState {\r\n\tisLoading: boolean;\r\n\tisError: boolean;\r\n\tdata: Recipe[];\r\n}\r\n\r\nexport enum RecipeContentType {\r\n\tINGREDIENTS = 'ingredients',\r\n\tPARAGRAPH = 'paragraph',\r\n\tYOUTUBE = 'youtube',\r\n\tLINK = 'link',\r\n}\r\n\r\nexport interface RecipeContent {\r\n\ttype: RecipeContentType;\r\n\tkey?: string;\r\n\ttitle?: string;\r\n\tcontent?: string;\r\n}\r\n\r\nexport interface Recipe {\r\n\tid: string;\r\n\ttitle: string;\r\n\ttitleAlt: string; // generisan i normalizovan za search\r\n\tsubtitle?: string;\r\n\timageUrl: string;\r\n\ttime?: number;\r\n\ttags: string[];\r\n\tcontent: RecipeContent[];\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { ls, LsKeys } from '../../data/ls';\r\nimport { DataState, Recipe } from '../../types';\r\n\r\nconst initialState: DataState = {\r\n\tisLoading: false,\r\n\tisError: false,\r\n\tdata: ls.get(LsKeys.DATA) || [],\r\n};\r\n\r\nconst dataSlice = createSlice({\r\n\tname: 'data',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tdataRequest(state: DataState) {\r\n\t\t\tstate.isLoading = true;\r\n\t\t\tstate.isError = false;\r\n\t\t},\r\n\t\tdataSuccess(state: DataState, action: PayloadAction<{ data: Recipe[] }>) {\r\n\t\t\tstate.isLoading = false;\r\n\t\t\tstate.isError = false;\r\n\t\t\tstate.data = action.payload.data;\r\n\t\t\tls.set(LsKeys.DATA, action.payload.data);\r\n\t\t},\r\n\t\tdataError(state: DataState) {\r\n\t\t\tstate.isLoading = false;\r\n\t\t\tstate.isError = true;\r\n\t\t},\r\n\t}\r\n});\r\n\r\nexport const { dataRequest, dataSuccess, dataError } = dataSlice.actions;\r\n\r\nexport const dataReducer = dataSlice.reducer;\r\n","import { ReactElement } from 'react';\r\n\r\nlet slideInComponent: ReactElement | null = null;\r\n\r\nexport const setComponent = (component: ReactElement) => slideInComponent = component;\r\n\r\nexport const getComponent = () => slideInComponent;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { ReactElement } from 'react';\r\nimport { setComponent } from '../../components/SlideIn/service';\r\nimport { SlideInState } from '../../types';\r\n\r\nconst initialState: SlideInState = {\r\n\tisActive: false,\r\n};\r\n\r\nconst slideInSlice = createSlice({\r\n\tname: 'slideIn',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tactivate: {\r\n\t\t\treducer(state: SlideInState) {\r\n\t\t\t\tstate.isActive = true;\r\n\t\t\t},\r\n\t\t\tprepare(component: ReactElement) {\r\n\t\t\t\tsetComponent(component);\r\n\t\t\t\treturn { payload: null };\r\n\t\t\t}\r\n\t\t},\r\n\t\tdeactivate(state: SlideInState) {\r\n\t\t\tstate.isActive = false;\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport const { activate, deactivate } = slideInSlice.actions;\r\n\r\nexport const slideInReducer = slideInSlice.reducer;\r\n","export const isImgur = (imageUrl:  string) => imageUrl.includes('imgur.com');\r\n\r\nexport const getOriginal = (imageUrl: string) => imageUrl.replace('imgur.com', 'i.imgur.com') + '.jpg';\r\n\r\nexport const getThumbnail = (imageUrl: string) => imageUrl.replace('imgur.com', 'i.imgur.com') + 's.jpg';\r\n","import cls from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport c from './Image.module.scss';\r\n\r\ninterface Props {\r\n\turl: string;\r\n\tklass?: string;\r\n}\r\n\r\nexport const Image: FC<Props> = ({ url, klass }) => {\r\n\tconst className = cls(c.wrap, klass);\r\n\treturn (\r\n\t\t<div className={className} style={{ backgroundImage: `url(${url})` }}/>\r\n\t);\r\n};\r\n","import cls from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport c from './TagList.module.scss';\r\n\r\ninterface Props {\r\n\ttags?: string[];\r\n\tkeyPrefix: string,\r\n\tklass?: string;\r\n}\r\n\r\nexport const TagList: FC<Props> = ({ tags = [], keyPrefix, klass }) => {\r\n\tif (!tags.length) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst className = cls(c.wrap, klass);\r\n\r\n\treturn (\r\n\t\t<div className={className}>{tags.map((tag, i) => <span className={c.tag}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t key={`tag-${keyPrefix}-${i}`}>{tag}</span>)}</div>\r\n\t);\r\n};\r\n","import React, { FC } from 'react';\r\nimport { RecipeContentProps } from '../types';\r\nimport c from './Ingredients.module.scss';\r\n\r\nconst parseContent = (content?: string) => {\r\n\tconst parsedContent: Array<{ quantity: string | null, value: string }> = [];\r\n\r\n\tif (!content) {\r\n\t\treturn parsedContent;\r\n\t}\r\n\r\n\tcontent.split('\\n').forEach(row => {\r\n\t\trow = row.trim();\r\n\t\tif (!row) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst split = row.split(':');\r\n\t\tif (split.length === 1) {\r\n\t\t\tparsedContent.push({ quantity: null, value: split[0] });\r\n\t\t} else {\r\n\t\t\tconst quantity = split[0].trim();\r\n\t\t\tsplit.shift();\r\n\t\t\tconst value = split.join(':').trim();\r\n\t\t\tparsedContent.push({ quantity, value });\r\n\t\t}\r\n\t});\r\n\r\n\treturn parsedContent;\r\n};\r\n\r\nexport const Ingredients: FC<RecipeContentProps> = ({ recipeContent }) => {\r\n\tconst { title = 'Sastojci', content } = recipeContent;\r\n\tconst parsedContent = parseContent(content);\r\n\r\n\treturn (\r\n\t\t<div className={c.wrap}>\r\n\t\t\t<div className={c.title}>{title}</div>\r\n\t\t\t<table className={c.table}>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t{\r\n\t\t\t\t\tparsedContent.map((row, i) => (\r\n\t\t\t\t\t\t<tr key={`${recipeContent.key}-ingredient-${i}`}>\r\n\t\t\t\t\t\t\t<td className={c.quantity}>{row.quantity}</td>\r\n\t\t\t\t\t\t\t<td className={c.value}>{row.value}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { FC } from 'react';\r\nimport { RecipeContentProps } from '../types';\r\nimport c from './Paragraph.module.scss';\r\n\r\nconst parseContent = (content?: string) => {\r\n\tconst parsedContent: string[] = [];\r\n\r\n\tif (!content) {\r\n\t\treturn parsedContent;\r\n\t}\r\n\r\n\tcontent.split('\\n').forEach(p => {\r\n\t\tp = p.trim();\r\n\t\tif (!p) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tparsedContent.push(p);\r\n\t});\r\n\r\n\treturn parsedContent;\r\n};\r\n\r\nexport const Paragraph: FC<RecipeContentProps> = ({ recipeContent }) => {\r\n\tconst { title = 'Priprema', content } = recipeContent;\r\n\tconst parsedContent = parseContent(content);\r\n\r\n\treturn (\r\n\t\t<div className={c.wrap}>\r\n\t\t\t<div className={c.title}>{title}</div>\r\n\t\t\t{\r\n\t\t\t\tparsedContent.map((p, i) => <p key={`${recipeContent.key}-paragraph-${i}`} className={c.p}>{p}</p>)\r\n\t\t\t}\r\n\t\t</div>\r\n\r\n\t);\r\n};\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Store } from '../../../types';\r\nimport { Image } from '../../Image';\r\nimport { RecipeContentProps } from '../types';\r\nimport c from './YouTube.module.scss';\r\n\r\nconst getYTId = (url: string) => {\r\n\tconst regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\r\n\tconst match = url.match(regExp);\r\n\r\n\treturn (match && match[2].length === 11)\r\n\t\t? match[2]\r\n\t\t: null;\r\n};\r\n\r\nconst getEmbedUrl = (id: string) => `https://www.youtube.com/embed/${id}?autoplay=1`;\r\n\r\nconst getCoverUrl = (id: string) => `https://i1.ytimg.com/vi/${id}/0.jpg`;\r\n\r\nconst selectIsActive = (s: Store) => s.slideIn.isActive;\r\n\r\nexport const YouTube: FC<RecipeContentProps> = ({ recipeContent }) => {\r\n\tconst isActive = useSelector<Store, boolean>(selectIsActive);\r\n\r\n\tconst [play, setPlay] = useState(false);\r\n\r\n\t// to stop video when slideIn is closed\r\n\tuseEffect(() => {\r\n\t\tif (!isActive) {\r\n\t\t\tsetPlay(false);\r\n\t\t}\r\n\t}, [isActive]);\r\n\r\n\tconst { content } = recipeContent;\r\n\r\n\tif (!content) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst id = getYTId(content);\r\n\r\n\tif (!id) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst playVideo = () => setPlay(true);\r\n\r\n\tconst renderCover = () => (\r\n\t\t<div className={c.cover} onClick={playVideo}>\r\n\t\t\t<Image url={getCoverUrl(id)} klass={c.coverImage}/>\r\n\t\t\t<div className={c.coverOverlay}>\r\n\t\t\t\t<div className={c.playIcon}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst renderIframe = () => <iframe src={getEmbedUrl(id)} frameBorder=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture; fullscreen\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t allowFullScreen\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t title=\"youtube iframe\"/>;\r\n\r\n\treturn (\r\n\t\t<div className={c.wrap}>\r\n\t\t\t<div className={c.videoContainer}>\r\n\t\t\t\t{play ? renderIframe() : renderCover()}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Recipe, RecipeContent, RecipeContentType } from '../../types';\r\nimport { getOriginal } from '../../utils/imgur';\r\nimport { Image } from '../Image';\r\nimport { TagList } from '../TagList';\r\nimport { Ingredients } from './Ingredients';\r\nimport { Paragraph } from './Paragraph';\r\nimport c from './RecipeView.module.scss';\r\nimport { YouTube } from './YouTube';\r\n\r\ninterface Props {\r\n\trecipe: Recipe;\r\n}\r\n\r\nconst renderRecipeContent = (recipeContent: RecipeContent) => {\r\n\tswitch (recipeContent.type) {\r\n\t\tcase RecipeContentType.INGREDIENTS:\r\n\t\t\treturn <Ingredients recipeContent={recipeContent} key={recipeContent.key}/>;\r\n\t\tcase RecipeContentType.YOUTUBE:\r\n\t\t\treturn <YouTube recipeContent={recipeContent} key={recipeContent.key}/>;\r\n\t\tcase RecipeContentType.PARAGRAPH:\r\n\t\t\treturn <Paragraph recipeContent={recipeContent} key={recipeContent.key}/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const RecipeView: FC<Props> = ({ recipe }) => {\r\n\treturn (\r\n\t\t<div className={c.wrap}>\r\n\t\t\t<Image klass={c.image} url={getOriginal(recipe.imageUrl)}/>\r\n\t\t\t<div className={c.title}>{recipe.title}</div>\r\n\t\t\t<TagList keyPrefix={'recipe'} tags={recipe.tags} klass={c.tags}/>\r\n\t\t\t<div className={c.contentWrap}>\r\n\t\t\t\t{\r\n\t\t\t\t\trecipe.content.map(content => renderRecipeContent(content))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { FC } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activate } from '../../reducers/slideIn';\r\nimport { Recipe } from '../../types';\r\nimport { getThumbnail } from '../../utils/imgur';\r\nimport { Image } from '../Image';\r\nimport { RecipeView } from '../RecipeView';\r\nimport { TagList } from '../TagList';\r\nimport c from './ListItem.module.scss';\r\n\r\ninterface Props {\r\n\trecipe: Recipe;\r\n}\r\n\r\nexport const ListItem: FC<Props> = ({ recipe }) => {\r\n\tconst {\r\n\t\ttitle,\r\n\t\timageUrl,\r\n\t\ttags = [],\r\n\t} = recipe;\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleClick = () => dispatch(activate(<RecipeView recipe={recipe}/>));\r\n\r\n\treturn (\r\n\t\t<div className={c.wrap} onClick={handleClick}>\r\n\t\t\t<Image klass={c.image} url={getThumbnail(imageUrl)}/>\r\n\t\t\t<div className={c.data}>\r\n\t\t\t\t<div className={c.title}>{title}</div>\r\n\t\t\t\t<TagList tags={tags} keyPrefix={'listItem'} klass={c.tags}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","export const initDeviceReady = () => {\r\n\tdocument.addEventListener('deviceready', onDeviceReady, false);\r\n};\r\n\r\nconst onDeviceReady = () => {\r\n\t// console.log('onDeviceReady');\r\n\tdocument.addEventListener('backbutton', onBackKey, false);\r\n};\r\n\r\nconst onBackKey = (e: any) => {\r\n\t// console.log('onBackKey');\r\n\tif (backKeyHandler !== noop) {\r\n\t\t// console.log('onBackKey IF');\r\n\t\te.preventDefault();\r\n\t\tbackKeyHandler();\r\n\t\tbackKeyHandler = noop;\r\n\t} else {\r\n\t\t// @ts-ignore\r\n\t\tnavigator.app.exitApp();\r\n\t}\r\n};\r\n\r\nconst noop = () => {};\r\n\r\nlet backKeyHandler: () => void = noop;\r\n\r\nexport const setBackKeyHandler = (handler: () => void) => {\r\n\tbackKeyHandler = handler;\r\n};\r\n","import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deactivate } from '../../reducers/slideIn';\r\nimport { Store } from '../../types';\r\nimport { getComponent } from './service';\r\n\r\nconst selectIsActive = (s: Store) => s.slideIn.isActive;\r\n\r\nexport const useSlideInModel = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst isActive = useSelector<Store, boolean>(selectIsActive);\r\n\r\n\treturn {\r\n\t\tisActive,\r\n\t\tcomponent: getComponent(),\r\n\t\tdeactivate: useCallback(() => dispatch(deactivate()), [dispatch]),\r\n\t};\r\n};\r\n","import cls from 'classnames';\r\nimport React, { FC, useEffect, useRef } from 'react';\r\nimport { setBackKeyHandler } from '../../utils/cordova';\r\nimport { useSlideInModel } from './SlideIn.model';\r\nimport c from './SlideIn.module.scss';\r\n\r\nexport const SlideIn: FC = () => {\r\n\tconst { isActive, component, deactivate } = useSlideInModel();\r\n\r\n\tconst wrapRef = useRef(null);\r\n\r\n\tconst handleBack = () => deactivate();\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (wrapRef && wrapRef.current) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\twrapRef.current.scrollTo(0, 0);\r\n\t\t\t}\r\n\t\t\tsetBackKeyHandler(handleBack);\r\n\t\t},\r\n\t\t[component]\r\n\t);\r\n\r\n\tconst classNameComponent = cls(c.wrap, isActive && c.active);\r\n\tconst classNameBack = cls(c.back, isActive && c.active);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={classNameComponent} ref={wrapRef}>{component}</div>\r\n\t\t\t<div className={classNameBack} onClick={handleBack}/>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { prepareData } from '../../data';\r\nimport { fbget } from '../../data/axios';\r\nimport { dataSuccess } from '../../reducers/data';\r\nimport { Recipe, Store } from '../../types';\r\nimport { ListItem } from '../ListItem';\r\nimport { SlideIn } from '../SlideIn';\r\nimport c from './App.module.scss';\r\n\r\nconst selectData = (s: Store) => s.data.data;\r\n\r\nexport const App: FC = () => {\r\n\tconst data = useSelector<Store, Recipe[]>(selectData);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\t// to get fresh data from fb\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tfbget('recipes')\r\n\t\t\t\t.then(({ data }: { data: Recipe[] }) => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\tdispatch(dataSuccess({ data: prepareData(data) }));\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => console.log(error));\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={c.app}>\r\n\t\t\t<header>\r\n\t\t\t</header>\r\n\t\t\t<section>\r\n\t\t\t\t{data.map((r, i) => <ListItem key={`list-${i}-${r.id}`} recipe={r}/>)}\r\n\t\t\t</section>\r\n\t\t\t<SlideIn/>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { dataReducer } from './data';\r\nimport { slideInReducer } from './slideIn';\r\n\r\nexport const rootReducer = combineReducers({\r\n\tslideIn: slideInReducer,\r\n\tdata: dataReducer,\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { App } from './components/App';\r\nimport './index.scss';\r\nimport { rootReducer } from './reducers';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { initDeviceReady } from './utils/cordova';\r\n\r\ninitDeviceReady();\r\n\r\nconst store = configureStore({\r\n\treducer: rootReducer,\r\n});\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App/>\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Ingredients_wrap__1yIjA\",\"title\":\"Ingredients_title__2a0We\",\"table\":\"Ingredients_table__26189\",\"quantity\":\"Ingredients_quantity__2vD4_\",\"value\":\"Ingredients_value__1j7OH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"RecipeView_image__3blqD\",\"title\":\"RecipeView_title__2_p5f\",\"tags\":\"RecipeView_tags__1iG9a\",\"contentWrap\":\"RecipeView_contentWrap__3KVRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"ListItem_wrap__1nudd\",\"image\":\"ListItem_image__3DErl\",\"data\":\"ListItem_data__3cw49\",\"title\":\"ListItem_title__11C99\"};"],"sourceRoot":""}