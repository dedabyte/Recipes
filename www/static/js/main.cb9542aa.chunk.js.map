{"version":3,"sources":["components/RecipeView/YouTube/YouTube.module.scss","components/RecipeView/Ingredients/Ingredients.module.scss","components/RecipeView/RecipeView.module.scss","components/ListItem/ListItem.module.scss","components/SlideIn/SlideIn.module.scss","components/RecipeView/Paragraph/Paragraph.module.scss","components/TagList/TagList.module.scss","components/Image/Image.module.scss","components/App/App.module.scss","types/index.ts","data/index.ts","components/SlideIn/service.ts","reducers/slideIn/index.ts","utils/imgur.ts","components/Image/Image.tsx","components/TagList/TagList.tsx","components/RecipeView/Ingredients/Ingredients.tsx","components/RecipeView/Paragraph/Paragraph.tsx","components/RecipeView/YouTube/YouTube.tsx","components/RecipeView/RecipeView.tsx","components/ListItem/ListItem.tsx","utils/cordova.ts","components/SlideIn/SlideIn.tsx","components/SlideIn/SlideIn.model.ts","components/App/App.tsx","reducers/index.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","RecipeContentType","data","recipes","id","title","titleAlt","tags","imageUrl","content","type","INGREDIENTS","YOUTUBE","PARAGRAPH","forEach","recipe","i","key","slideInComponent","slideInSlice","createSlice","name","initialState","isActive","reducers","activate","reducer","state","prepare","component","setComponent","payload","deactivate","actions","slideInReducer","getThumbnail","replace","Image","url","klass","className","cls","c","wrap","style","backgroundImage","TagList","keyPrefix","length","map","tag","Ingredients","recipeContent","parsedContent","split","row","trim","push","quantity","value","shift","join","parseContent","table","Paragraph","p","getEmbedUrl","getCoverUrl","YouTube","useState","play","setPlay","match","getYTId","playVideo","videoContainer","src","frameBorder","allow","allowFullScreen","cover","onClick","coverImage","coverOverlay","playIcon","RecipeView","image","contentWrap","renderRecipeContent","ListItem","dispatch","useDispatch","find","r","onDeviceReady","document","addEventListener","onBackKey","e","backKeyHandler","noop","preventDefault","SlideIn","useSelector","slideIn","useCallback","useSlideInModel","wrapRef","useRef","handleBack","useEffect","current","scrollTo","classNameComponent","active","classNameBack","back","ref","App","app","rootReducer","combineReducers","Boolean","window","location","hostname","store","configureStore","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cb9542aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"YouTube_wrap__12Ux0\",\"videoContainer\":\"YouTube_videoContainer__5VVIo\",\"cover\":\"YouTube_cover__eRZ2M\",\"coverOverlay\":\"YouTube_coverOverlay__1TiHr\",\"coverImage\":\"YouTube_coverImage__15yvU\",\"playIcon\":\"YouTube_playIcon__1WyrH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Ingredients_wrap__1yIjA\",\"title\":\"Ingredients_title__2a0We\",\"table\":\"Ingredients_table__26189\",\"quantity\":\"Ingredients_quantity__2vD4_\",\"value\":\"Ingredients_value__1j7OH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"RecipeView_image__3blqD\",\"title\":\"RecipeView_title__2_p5f\",\"tags\":\"RecipeView_tags__1iG9a\",\"contentWrap\":\"RecipeView_contentWrap__3KVRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"ListItem_wrap__1nudd\",\"image\":\"ListItem_image__3DErl\",\"data\":\"ListItem_data__3cw49\",\"title\":\"ListItem_title__11C99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"SlideIn_wrap__1PUfU\",\"active\":\"SlideIn_active__3yx6B\",\"back\":\"SlideIn_back__1Rcr4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Paragraph_wrap__N3xmS\",\"title\":\"Paragraph_title__1vwUR\",\"p\":\"Paragraph_p__r8mOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"TagList_tag__18A-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Image_wrap__Su3u-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3maBR\"};","export interface Store {\r\n\tsearch: SearchState,\r\n\tslideIn: SlideInState;\r\n}\r\n\r\nexport interface SearchState {\r\n\tisActive: boolean;\r\n\ttext?: string;\r\n\ttags?: string[];\r\n\ttime?: number;\r\n\tresults: Recipe[]; // mozda ne ceo rezultat, samo id\r\n}\r\n\r\nexport interface SlideInState {\r\n\tisActive: boolean;\r\n}\r\n\r\nexport enum RecipeContentType {\r\n\tINGREDIENTS = 'ingredients',\r\n\tPARAGRAPH = 'paragraph',\r\n\tYOUTUBE = 'youtube',\r\n\tLINK = 'link',\r\n}\r\n\r\nexport interface RecipeContent {\r\n\ttype: RecipeContentType;\r\n\tkey?: string;\r\n\ttitle?: string;\r\n\tcontent?: string;\r\n}\r\n\r\nexport interface Recipe {\r\n\tid: string;\r\n\ttitle: string;\r\n\ttitleAlt: string; // generisan i normalizovan za search\r\n\tsubtitle?: string;\r\n\timageUrl: string;\r\n\ttime?: number;\r\n\ttags: string[];\r\n\tcontent: RecipeContent[];\r\n}\r\n","import { Recipe, RecipeContentType } from '../types';\r\n\r\nconst prepareData = (data: Recipe[]) => {\r\n\tdata.forEach(recipe => {\r\n\t\trecipe.content.forEach((content, i) => {\r\n\t\t\tcontent.key = `recipe-${recipe.id}-${content.type}-${i}`;\r\n\t\t});\r\n\t});\r\n\treturn data;\r\n};\r\n\r\nexport const recipes: Recipe[] = prepareData([\r\n\t{\r\n\t\tid: '1',\r\n\t\ttitle: 'Gurmanski krompir iz rerne',\r\n\t\ttitleAlt: 'gurmanski krompir iz rerne',\r\n\t\ttags: ['slano', 'krompir'],\r\n\t\timageUrl: 'https://imgur.com/k7Co6mR',\r\n\t\tcontent: [\r\n\t\t\t{\r\n\t\t\t\ttype: RecipeContentType.INGREDIENTS,\r\n\t\t\t\tcontent: `\r\n\t\t\t\t3 : srednja krompira\r\n\t\t\t\t50 g : slanine\r\n\t\t\t\t150 g : praziluka\r\n\t\t\t\t200 ml : pavlake za kuvanje\r\n\t\t\t\t2 : jajeta\r\n\t\t\t\t1 : čen belog luka\r\n\t\t\t\tzačini po ukusu (so, biber, muskatni oraščić, tucana ljuta)\r\n\t\t\t\ttvrdi sir po izboru (Gauda, Kačkavalj, Mocarela ili npr. Čedar)\r\n\t\t\t\t`,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: RecipeContentType.YOUTUBE,\r\n\t\t\t\tcontent: 'https://www.youtube.com/watch?v=vdqmlX6Pl5s',\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\r\n\t{\r\n\t\tid: '2',\r\n\t\ttitle: 'Jogurt kocke sa grizom i sirom',\r\n\t\ttitleAlt: 'jogurt kocke sa grizom i sirom',\r\n\t\ttags: ['slano', 'pita', 'sir'],\r\n\t\timageUrl: 'https://imgur.com/vgeFyty',\r\n\t\tcontent: [\r\n\t\t\t{\r\n\t\t\t\ttype: RecipeContentType.INGREDIENTS,\r\n\t\t\t\ttitle: 'Sastojci za pitu',\r\n\t\t\t\tcontent: `\r\n\t\t\t\t1 : pakovanje gotovih kora za pite i gibanice\r\n\t\t\t\t3 : jajeta\r\n\t\t\t\t2 : čaše jogurta\r\n\t\t\t\tpola : čaše ulja\r\n\t\t\t\t1 : čaša griza\r\n\t\t\t\t130 g : sira\r\n\t\t\t\t1 : kašičica soli\r\n\t\t\t\t2 : kašičice praška za pecivo\r\n\t\t\t\t`,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: RecipeContentType.INGREDIENTS,\r\n\t\t\t\ttitle: 'Sastojci za preliv',\r\n\t\t\t\tcontent: `\r\n\t\t\t\tpola : čaše jogurta\r\n\t\t\t\tmanje od pola : čaše ulja\r\n\t\t\t\tmanje od pola : čaše mleka\r\n\t\t\t\tsusam za posipanje\r\n\t\t\t\t`,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: RecipeContentType.YOUTUBE,\r\n\t\t\t\tcontent: 'https://www.youtube.com/watch?v=3iubYoYJjl4',\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\r\n\t{\r\n\t\tid: '3',\r\n\t\ttitle: 'Krofne',\r\n\t\ttitleAlt: 'krofne',\r\n\t\ttags: ['slatko'],\r\n\t\timageUrl: 'https://imgur.com/Ib3xP1a',\r\n\t\tcontent: [\r\n\t\t\t{\r\n\t\t\t\ttype: RecipeContentType.INGREDIENTS,\r\n\t\t\t\tcontent: `\r\n\t\t\t\t400 ml : mleka\r\n\t\t\t\t50 ml : ulja\r\n\t\t\t\t40 g : kvasca\r\n\t\t\t\t2 : cela jaja\r\n\t\t\t\t1 : kašika šećera\r\n\t\t\t\t1 : prstohvat soli\r\n\t\t\t\t700 g : brašna\r\n\t\t\t\t+ 50 g : za pospipanje\r\n\t\t\t\t+ 50 g : da se završi mešenje testa\r\n\t\t\t\t`,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: RecipeContentType.PARAGRAPH,\r\n\t\t\t\tcontent: `\r\n\t\t\t\tKvasac nije potrebno da kisne.\r\n\t\t\t\tU toplo mleko dodati izmrvljen kvasac i šećer pa izmešati.\r\n\t\t\t\tU to dodati pola mere brašna i sve sjediniti žicom za mućenje.\r\n\t\t\t\tZatim dodati ulje, razmućena jaja i so.\r\n\t\t\t\tOpet izmešati.\r\n\t\t\t\tDodati ostatak brašna pa umutiti kašikom.\r\n\t\t\t\tTome dodati još 50 gr brašna.\r\n\t\t\t\tTesto će biti mekano i lepiće se za ruke, ali tako treba.\r\n\t\t\t\tKašikom ga uobličite, pospite sa malo brašna, pa pokrite krpom i ostavite da odstoji oko 30 minuta dok se masa ne udvostruči.\r\n\t\t\t\tPobrašnaviti sto, pa istreti nadošlo testo. Biće i dalje lepljivo ali kad ga budete sa malo brašna premesili neće više.\r\n\t\t\t\tMalo testo premesite, sve ivice ubacite unutra.\r\n\t\t\t\tPospite brašnom opet sto pa razvucite testo na debljinu 1 cm.\r\n\t\t\t\tVadite modlom, veličine koju želite krofne.\r\n\t\t\t\tPospite brašnom tacne ili sto gde ćete ih slagati.\r\n\t\t\t\tKada isečete krofne, onaj ostatak testa opet premesite i opet razvucite pa isecite krofne.\r\n\t\t\t\tPokrijte isečene krofne krpom pa ostavite da kisnu 20 minuta.\r\n\t\t\t\tZagrejte dosta ulja, ja sam stavila 700 ml na srednju temperaturu. Pazite da ne bude prejaka, a ni preslaba.\r\n\t\t\t\tSpuštajte krofne u zagrejano ulje, ona strana koja je bila gore sad ide dole i obrnuto.\r\n\t\t\t\tObavezno poklopite do okretanja.\r\n\t\t\t\tKada je donja strana porumenila otklopite i okrenite krofne.\r\n\t\t\t\tSada se ne poklapa.\r\n\t\t\t\tPečene krofne izbadite na papirni ubrus ili salvetu da se ocede od viška ulja.\r\n\t\t\t\tZa kraj krofne pospite šećerom u prahu ili, pošto su šuplje napunite špricem sa nekim kremom ili pekmezom.\r\n\t\t\t\t`,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: RecipeContentType.YOUTUBE,\r\n\t\t\t\tcontent: 'https://www.youtube.com/watch?v=qpjsd0pIzTc',\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tid: '4',\r\n\t\ttitle: 'Štapići sa semenkama',\r\n\t\ttitleAlt: 'stapici sa semenkama',\r\n\t\ttags: ['slano', 'štapići', 'semenke'],\r\n\t\timageUrl: 'https://imgur.com/q5fMMbK',\r\n\t\tcontent: [\r\n\t\t\t{\r\n\t\t\t\ttype: RecipeContentType.INGREDIENTS,\r\n\t\t\t\tcontent: `\r\n\t\t\t\t500 g : brašna\r\n\t\t\t\t150 ml : ulja\r\n\t\t\t\t200 ml : belog vina\r\n\t\t\t\t1 : kesica praška za pecivo\r\n\t\t\t\t50 g : semenki suncokreta\r\n\t\t\t\t50 g : semenki lana\r\n\t\t\t\t50 g : susama\r\n\t\t\t\t1 : žumance\r\n\t\t\t\tmalo : mleka\r\n\t\t\t\tso (po ukusu)\r\n\t\t\t\t`,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: RecipeContentType.PARAGRAPH,\r\n\t\t\t\tcontent: `\r\n\t\t\t\tU vanglicu staviti sve sastojke i zamesiti testo. Umešeno testo prebaciti na pobrašnjenu radnu površinu i razviti ga, 0,5 cm debljine. Seći na štapiće i ređati u pleh, preko pek papira. Isečeno testo može da se uvrti, pa da se dobiju spirale.\r\n\t\t\t\tPoređane štapiće premazati umućenim žumancetom (sa malo mleka) i staviti da se peče, u prethodno zagrejanoj rerni, na 190 stepeni.\r\n\t\t\t\t`,\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tid: '5',\r\n\t\ttitle: 'Zdravi mafini bez šećera i brašna',\r\n\t\ttitleAlt: 'zdravi mafini bez secera i brasna',\r\n\t\ttags: ['slatko', 'mafini'],\r\n\t\timageUrl: 'https://imgur.com/WiQ44FO',\r\n\t\tcontent: [\r\n\t\t\t{\r\n\t\t\t\ttype: RecipeContentType.INGREDIENTS,\r\n\t\t\t\ttitle: 'Sastojci (12 mafina)',\r\n\t\t\t\tcontent: `\r\n\t\t\t\t2 : jajeta\r\n\t\t\t\t150 g : mlevenih ovsenih pahuljica\r\n\t\t\t\t1 : banana\r\n\t\t\t\t1 : šargarepa\r\n\t\t\t\t1 : jabuka\r\n\t\t\t\t1 : pomorandža\r\n\t\t\t\t30 g : oraha\r\n\t\t\t\t30 g : suvog grožđa, suvih šljiva ili nekog suvog voća po želji\r\n\t\t\t\t1 : kašičica ekstrakta od vanile\r\n\t\t\t\t60 ml : ulja (maslinovo, kokosovo ili otopljenog putera)\r\n\t\t\t\t1 : kašičica praška za pecivo\r\n\t\t\t\tpola : kašičice sode bikarbone\r\n\t\t\t\tna vrh : kašičice cimeta\r\n\t\t\t\tna vrh : kašičice mlevenog đumbira\r\n\t\t\t\tna vrh : kašičice muskatnog oraščića\r\n\t\t\t\t1 : prstohvat soli\r\n\t\t\t\t1,5 : kašičica meda\r\n\t\t\t\tmalo : celih ovsenih pahuljica za posipanje\r\n\t\t\t\t`,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: RecipeContentType.PARAGRAPH,\r\n\t\t\t\tcontent: `\r\n\t\t\t\tIzmutite jaja pa im dodajte izgnječenu bananu, med i ekstrakt od vanile. Narendajte zatim koricu od jedne pomorandže pa je presecite napola i nacedite sok od jedne polovine. Dodajte sok i narendanu koricu u smesu. Dodajte prstohvat soli, prašak za pecivo, sodu bikarbonu kao i ostale začine pa narendajte i dodajte ulje i narendanu šargarepu.\r\n\t\t\t\tSve izmešajte i na kraju postepeno uz mešanje dodajte i ovsene pahuljice. Ja sam ovoga puta seckala suve šljive jer su mi ostale i želela sam da ih iskoristim. Potopila sam ih prethodno veče u vodu kako bi omekšale pa ih procedila i iseckala sitno. Umesto suvih šljiva možete koristiti suvo grožđe ili neko suvo voće po izboru. U smesu dodajte seckane orahe, sve promešajte i sipajte u korpice za mafine.\r\n\t\t\t\tPecite ih u već zagrejanoj rerni na 180 C 25-30 minuta.\r\n\t\t\t\t`,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: RecipeContentType.YOUTUBE,\r\n\t\t\t\tcontent: 'https://www.youtube.com/watch?v=3iubYoYJjl4',\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tid: '6',\r\n\t\ttitle: 'Domaći rolat sa džemom',\r\n\t\ttitleAlt: 'domaci rolat sa dzemom',\r\n\t\ttags: ['slatko', 'rolat', 'džem'],\r\n\t\timageUrl: 'https://imgur.com/wEXZs6h',\r\n\t\tcontent: [\r\n\t\t\t{\r\n\t\t\t\ttype: RecipeContentType.INGREDIENTS,\r\n\t\t\t\tcontent: `\r\n\t\t\t\t6 : jaja\r\n\t\t\t\t7 kašika : šećera\r\n\t\t\t\t7 kašika : brašna\r\n\t\t\t\t1 kašika : ulja\r\n\t\t\t\t1 kesica : praška za pecivo\r\n\t\t\t\t5-6 kašika : džema\r\n\t\t\t\t`,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: RecipeContentType.PARAGRAPH,\r\n\t\t\t\tcontent: `\r\n\t\t\t\tMutiti žumanca sa šećerom pa dodati čvrsto izmućen sneg od belanaca, i ostale sastojke, onda mešati lagano varjačom da belanci ne padnu. U veliki pleh od šporeta staviti papir za pečenje i izliti biskvitno testo. Peći u zagrejanoj rerni na 175 stepeni oko 20 minuta, treba paziti jer ne sme da se prepeče jer neće dobro da se savije. Pečenom i prohlađenom biskvitu skinuti papir. Premestiti ga na kuhinjsku krpu posutu kristal šećerom i uviti i ostaviti da se potpuno ohladi. Ohlađeno odviti, namazati džemom i ponovo saviti u rolat.\r\n\t\t\t\t`,\r\n\t\t\t},\r\n\t\t]\r\n\t},\r\n]);\r\n","import { ReactElement } from 'react';\r\n\r\nlet slideInComponent: ReactElement | null = null;\r\n\r\nexport const setComponent = (component: ReactElement) => slideInComponent = component;\r\n\r\nexport const getComponent = () => slideInComponent;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { ReactElement } from 'react';\r\nimport { setComponent } from '../../components/SlideIn/service';\r\nimport { SlideInState } from '../../types';\r\n\r\nconst initialState: SlideInState = {\r\n\tisActive: false,\r\n};\r\n\r\nconst slideInSlice = createSlice({\r\n\tname: 'slideIn',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tactivate: {\r\n\t\t\treducer(state: SlideInState) {\r\n\t\t\t\tstate.isActive = true;\r\n\t\t\t},\r\n\t\t\tprepare(component: ReactElement) {\r\n\t\t\t\tsetComponent(component);\r\n\t\t\t\treturn { payload: null };\r\n\t\t\t}\r\n\t\t},\r\n\t\tdeactivate(state: SlideInState) {\r\n\t\t\tstate.isActive = false;\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport const { activate, deactivate } = slideInSlice.actions;\r\n\r\nexport const slideInReducer = slideInSlice.reducer;\r\n","export const isImgur = (imageUrl:  string) => imageUrl.includes('imgur.com');\r\n\r\nexport const getOriginal = (imageUrl: string) => imageUrl.replace('imgur.com', 'i.imgur.com') + '.jpg';\r\n\r\nexport const getThumbnail = (imageUrl: string) => imageUrl.replace('imgur.com', 'i.imgur.com') + 's.jpg';\r\n","import cls from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport c from './Image.module.scss';\r\n\r\ninterface Props {\r\n\turl: string;\r\n\tklass?: string;\r\n}\r\n\r\nexport const Image: FC<Props> = ({ url, klass }) => {\r\n\tconst className = cls(c.wrap, klass);\r\n\treturn (\r\n\t\t<div className={className} style={{ backgroundImage: `url(${url})` }}/>\r\n\t);\r\n};\r\n","import cls from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport c from './TagList.module.scss';\r\n\r\ninterface Props {\r\n\ttags?: string[];\r\n\tkeyPrefix: string,\r\n\tklass?: string;\r\n}\r\n\r\nexport const TagList: FC<Props> = ({ tags = [], keyPrefix, klass }) => {\r\n\tif (!tags.length) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst className = cls(c.wrap, klass);\r\n\r\n\treturn (\r\n\t\t<div className={className}>{tags.map((tag, i) => <span className={c.tag}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t key={`tag-${keyPrefix}-${i}`}>{tag}</span>)}</div>\r\n\t);\r\n};\r\n","import React, { FC } from 'react';\r\nimport { RecipeContentProps } from '../types';\r\nimport c from './Ingredients.module.scss';\r\n\r\nconst parseContent = (content?: string) => {\r\n\tconst parsedContent: Array<{ quantity: string | null, value: string }> = [];\r\n\r\n\tif (!content) {\r\n\t\treturn parsedContent;\r\n\t}\r\n\r\n\tcontent.split('\\n').forEach(row => {\r\n\t\trow = row.trim();\r\n\t\tif (!row) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst split = row.split(':');\r\n\t\tif (split.length === 1) {\r\n\t\t\tparsedContent.push({ quantity: null, value: split[0] });\r\n\t\t} else {\r\n\t\t\tconst quantity = split[0].trim();\r\n\t\t\tsplit.shift();\r\n\t\t\tconst value = split.join(':').trim();\r\n\t\t\tparsedContent.push({ quantity, value });\r\n\t\t}\r\n\t});\r\n\r\n\treturn parsedContent;\r\n};\r\n\r\nexport const Ingredients: FC<RecipeContentProps> = ({ recipeContent }) => {\r\n\tconst { title = 'Sastojci', content } = recipeContent;\r\n\tconst parsedContent = parseContent(content);\r\n\r\n\treturn (\r\n\t\t<div className={c.wrap}>\r\n\t\t\t<div className={c.title}>{title}</div>\r\n\t\t\t<table className={c.table}>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t{\r\n\t\t\t\t\tparsedContent.map((row, i) => (\r\n\t\t\t\t\t\t<tr key={`${recipeContent.key}-ingredient-${i}`}>\r\n\t\t\t\t\t\t\t<td className={c.quantity}>{row.quantity}</td>\r\n\t\t\t\t\t\t\t<td className={c.value}>{row.value}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { FC } from 'react';\r\nimport { RecipeContentProps } from '../types';\r\nimport c from './Paragraph.module.scss';\r\n\r\nconst parseContent = (content?: string) => {\r\n\tconst parsedContent: string[] = [];\r\n\r\n\tif (!content) {\r\n\t\treturn parsedContent;\r\n\t}\r\n\r\n\tcontent.split('\\n').forEach(p => {\r\n\t\tp = p.trim();\r\n\t\tif (!p) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tparsedContent.push(p);\r\n\t});\r\n\r\n\treturn parsedContent;\r\n};\r\n\r\nexport const Paragraph: FC<RecipeContentProps> = ({ recipeContent }) => {\r\n\tconst { title = 'Priprema', content } = recipeContent;\r\n\tconst parsedContent = parseContent(content);\r\n\r\n\treturn (\r\n\t\t<div className={c.wrap}>\r\n\t\t\t<div className={c.title}>{title}</div>\r\n\t\t\t{\r\n\t\t\t\tparsedContent.map((p, i) => <p key={`${recipeContent.key}-paragraph-${i}`} className={c.p}>{p}</p>)\r\n\t\t\t}\r\n\t\t</div>\r\n\r\n\t);\r\n};\r\n","import React, { FC, useState } from 'react';\r\nimport { Image } from '../../Image';\r\nimport { RecipeContentProps } from '../types';\r\nimport c from './YouTube.module.scss';\r\n\r\nconst getYTId = (url: string) => {\r\n\tconst regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\r\n\tconst match = url.match(regExp);\r\n\r\n\treturn (match && match[2].length === 11)\r\n\t\t? match[2]\r\n\t\t: null;\r\n};\r\n\r\nconst getEmbedUrl = (id: string) => `https://www.youtube.com/embed/${id}?autoplay=1`;\r\n\r\nconst getCoverUrl = (id: string) => `https://i1.ytimg.com/vi/${id}/0.jpg`;\r\n\r\nexport const YouTube: FC<RecipeContentProps> = ({ recipeContent }) => {\r\n\tconst [play, setPlay] = useState(false);\r\n\r\n\tconst { content } = recipeContent;\r\n\r\n\tif (!content) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst id = getYTId(content);\r\n\r\n\tif (!id) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst playVideo = () => setPlay(true);\r\n\r\n\tconst renderCover = () => (\r\n\t\t<div className={c.cover} onClick={playVideo}>\r\n\t\t\t<Image url={getCoverUrl(id)} klass={c.coverImage}/>\r\n\t\t\t<div className={c.coverOverlay}>\r\n\t\t\t\t<div className={c.playIcon}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst renderIframe = () => <iframe src={getEmbedUrl(id)} frameBorder=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture; fullscreen\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t allowFullScreen\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t title=\"youtube iframe\"/>;\r\n\r\n\treturn (\r\n\t\t<div className={c.wrap}>\r\n\t\t\t<div className={c.videoContainer}>\r\n\t\t\t\t{play ? renderIframe() : renderCover()}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { FC } from 'react';\r\nimport { Recipe, RecipeContent, RecipeContentType } from '../../types';\r\nimport { getOriginal } from '../../utils/imgur';\r\nimport { Image } from '../Image';\r\nimport { TagList } from '../TagList';\r\nimport { Ingredients } from './Ingredients';\r\nimport { Paragraph } from './Paragraph';\r\nimport c from './RecipeView.module.scss';\r\nimport { YouTube } from './YouTube';\r\n\r\ninterface Props {\r\n\trecipe: Recipe;\r\n}\r\n\r\nconst renderRecipeContent = (recipeContent: RecipeContent) => {\r\n\tswitch (recipeContent.type) {\r\n\t\tcase RecipeContentType.INGREDIENTS:\r\n\t\t\treturn <Ingredients recipeContent={recipeContent} key={recipeContent.key}/>;\r\n\t\tcase RecipeContentType.YOUTUBE:\r\n\t\t\treturn <YouTube recipeContent={recipeContent} key={recipeContent.key}/>;\r\n\t\tcase RecipeContentType.PARAGRAPH:\r\n\t\t\treturn <Paragraph recipeContent={recipeContent} key={recipeContent.key}/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const RecipeView: FC<Props> = ({ recipe }) => {\r\n\treturn (\r\n\t\t<div className={c.wrap}>\r\n\t\t\t<Image klass={c.image} url={getOriginal(recipe.imageUrl)}/>\r\n\t\t\t<div className={c.title}>{recipe.title}</div>\r\n\t\t\t<TagList keyPrefix={'recipe'} tags={recipe.tags} klass={c.tags}/>\r\n\t\t\t<div className={c.contentWrap}>\r\n\t\t\t\t{\r\n\t\t\t\t\trecipe.content.map(content => renderRecipeContent(content))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { FC } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { recipes } from '../../data';\r\nimport { activate } from '../../reducers/slideIn';\r\nimport { Recipe } from '../../types';\r\nimport { getThumbnail } from '../../utils/imgur';\r\nimport { Image } from '../Image';\r\nimport { RecipeView } from '../RecipeView';\r\nimport { TagList } from '../TagList';\r\nimport c from './ListItem.module.scss';\r\n\r\ninterface Props {\r\n\tid: string;\r\n\ttitle: string;\r\n\timageUrl: string;\r\n\ttags?: string[];\r\n}\r\n\r\nexport const ListItem: FC<Props> = (\r\n\t{\r\n\t\tid,\r\n\t\ttitle,\r\n\t\timageUrl,\r\n\t\ttags = [],\r\n\t}\r\n) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleClick = () => {\r\n\t\tconst recipe = recipes.find(r => r.id === id) as Recipe;\r\n\t\tdispatch(activate(<RecipeView recipe={recipe}/>));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={c.wrap} onClick={handleClick}>\r\n\t\t\t<Image klass={c.image} url={getThumbnail(imageUrl)}/>\r\n\t\t\t<div className={c.data}>\r\n\t\t\t\t<div className={c.title}>{title}</div>\r\n\t\t\t\t<TagList tags={tags} keyPrefix={'listItem'} klass={c.tags}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","export const initDeviceReady = () => {\r\n\tdocument.addEventListener('deviceready', onDeviceReady, false);\r\n};\r\n\r\nconst onDeviceReady = () => {\r\n\t// console.log('onDeviceReady');\r\n\tdocument.addEventListener('backbutton', onBackKey, false);\r\n};\r\n\r\nconst onBackKey = (e: any) => {\r\n\t// console.log('onBackKey');\r\n\tif (backKeyHandler !== noop) {\r\n\t\t// console.log('onBackKey IF');\r\n\t\te.preventDefault();\r\n\t\tbackKeyHandler();\r\n\t\tbackKeyHandler = noop;\r\n\t} else {\r\n\t\treturn true;\r\n\t}\r\n};\r\n\r\nconst noop = () => {};\r\n\r\nlet backKeyHandler: () => void = noop;\r\n\r\nexport const setBackKeyHandler = (handler: () => void) => {\r\n\tbackKeyHandler = handler;\r\n};\r\n","import cls from 'classnames';\r\nimport React, { FC, useEffect, useRef } from 'react';\r\nimport { setBackKeyHandler } from '../../utils/cordova';\r\nimport { useSlideInModel } from './SlideIn.model';\r\nimport c from './SlideIn.module.scss';\r\n\r\nexport const SlideIn: FC = () => {\r\n\tconst { isActive, component, deactivate } = useSlideInModel();\r\n\r\n\tconst wrapRef = useRef(null);\r\n\r\n\tconst handleBack = () => deactivate();\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (wrapRef && wrapRef.current) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\twrapRef.current.scrollTo(0, 0);\r\n\t\t\t}\r\n\t\t\tsetBackKeyHandler(handleBack);\r\n\t\t},\r\n\t\t[component]\r\n\t);\r\n\r\n\tconst classNameComponent = cls(c.wrap, isActive && c.active);\r\n\tconst classNameBack = cls(c.back, isActive && c.active);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={classNameComponent} ref={wrapRef}>{component}</div>\r\n\t\t\t<div className={classNameBack} onClick={handleBack}/>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deactivate } from '../../reducers/slideIn';\r\nimport { Store } from '../../types';\r\nimport { getComponent } from './service';\r\n\r\nexport const useSlideInModel = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst isActive = useSelector<Store, boolean>(state => state.slideIn.isActive);\r\n\r\n\treturn {\r\n\t\tisActive,\r\n\t\tcomponent: getComponent(),\r\n\t\tdeactivate: useCallback(() => dispatch(deactivate()), [dispatch]),\r\n\t};\r\n};\r\n","import React, { FC } from 'react';\r\nimport { recipes } from '../../data';\r\nimport { ListItem } from '../ListItem';\r\nimport { SlideIn } from '../SlideIn';\r\nimport c from './App.module.scss';\r\n\r\nexport const App: FC = () => {\r\n\treturn (\r\n\t\t<div className={c.app}>\r\n\t\t\t<header>\r\n\t\t\t</header>\r\n\t\t\t<section>\r\n\t\t\t\t{recipes.map((r, i) => <ListItem key={`list-${i}-${r.id}`} id={r.id} title={r.title} tags={r.tags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t imageUrl={r.imageUrl}/>)}\r\n\t\t\t</section>\r\n\t\t\t<SlideIn/>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { slideInReducer } from './slideIn';\r\n\r\nexport const rootReducer = combineReducers({\r\n\tslideIn: slideInReducer,\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { App } from './components/App';\r\nimport './index.scss';\r\nimport { rootReducer } from './reducers';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { initDeviceReady } from './utils/cordova';\r\n\r\ninitDeviceReady();\r\n\r\nconst store = configureStore({\r\n\treducer: rootReducer,\r\n});\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App/>\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}